# -*- coding: utf-8 -*-
"""Silhoutte_Score.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YSxSHnNknfE4nFRtTl7sbcyRbb9Eaikw
"""

import matplotlib.pyplot as plt
import numpy as np

# Data untuk jumlah cluster vs Silhouette Score
clusters = [2, 3, 4, 5, 6]  # Jumlah cluster yang diuji
silhouette_kmeans = [0.75, 0.82, 0.89, 0.85, 0.80]  # Silhouette Score untuk K-Means
silhouette_hac = [0.78, 0.84, 0.94, 0.88, 0.83]  # Silhouette Score untuk HAC

# Membuat line plot
plt.figure(figsize=(10, 5))
plt.plot(clusters, silhouette_kmeans, marker='o', linestyle='-', label='K-Means', zorder=2)
plt.plot(clusters, silhouette_hac, marker='s', linestyle='--', label='HAC', zorder=3)

# Menambahkan nilai di setiap titik dengan penyesuaian posisi agar tidak tertutup
for i in range(len(clusters)):
    plt.text(clusters[i], silhouette_kmeans[i] + 0.005, f'{silhouette_kmeans[i]:.2f}',
             ha='center', fontsize=10, fontweight='bold', color='blue', zorder=4)

    offset = 0.015 if clusters[i] == 4 else 0.005  # Menyesuaikan posisi label untuk HAC pada cluster 4
    plt.text(clusters[i], silhouette_hac[i] + offset, f'{silhouette_hac[i]:.2f}',
             ha='center', fontsize=10, fontweight='bold', color='green', zorder=4)

# Label dan judul
plt.xlabel('Number of Clusters')
plt.ylabel('Silhouette Score')
plt.title('Comparison of Silhouette Scores: K-Means vs HAC')
plt.ylim(0.7, 0.97)  # Menyesuaikan skala agar lebih jelas
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.legend()

# Menampilkan plot
plt.show()

import joblib
from sklearn.cluster import KMeans, AgglomerativeClustering

# Contoh data (gantilah dengan dataset yang sesuai)
X = [[1, 2], [1, 4], [1, 0],
     [10, 2], [10, 4], [10, 0]]

# Membuat model K-Means
kmeans = KMeans(n_clusters=3, random_state=42)
kmeans.fit(X)

# Membuat model HAC
hac = AgglomerativeClustering(n_clusters=3)
hac.fit(X)

# Simpan kedua model dalam satu dictionary
models = {
    "K-Means": kmeans,
    "HAC": hac
}

# Simpan dictionary ke file
joblib.dump(models, 'clustering_models.pkl')

print("Model K-Means dan HAC telah disimpan dalam satu file!")